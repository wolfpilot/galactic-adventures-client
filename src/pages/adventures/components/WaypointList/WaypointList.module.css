.wrapper {
  /* Declare local variables */
  --img-size: 10vw;
  --img-min-size: 60px;
  --img-max-size: 120px;

  --badge-sml-size: 30px;
  --badge-lrg-size: 40px;

  /* Other styles */
  overflow-x: auto;
  padding: var(--spacing-default);
}

.list {
  display: flex;
  /**
    * Fix overflow-x cutting elements off-screen using the new "safe" property.
    *
    * @see https://stackoverflow.com/questions/33454533/cant-scroll-to-top-of-flex-item-that-is-overflowing-container
    */
  justify-content: safe center;
  gap: var(--spacing-default);
  list-style: none;
  margin: 0 0 var(--spacing-small);
  padding: 0;
}

.item {
  flex: none;
}

.itemLink {
  display: block;
  width: 100%;
  height: 100%;
  color: var(--c-dGrey);
  text-decoration: none;
  cursor: pointer;

  &:hover {
    .itemImageWrapper {
      outline-color: var(--c-accent1);
    }

    .itemName {
      color: var(--c-accent1);
    }
  }
}

.itemImageWrapper {
  position: relative;
  width: var(--img-size);
  height: var(--img-size);
  min-width: var(--img-min-size);
  min-height: var(--img-min-size);
  max-width: var(--img-max-size);
  max-height: var(--img-max-size);
  margin-bottom: var(--spacing-small);
  outline: 2px solid transparent;
  border-radius: 50%;
  background-color: var(--c-pure-black);
  transition: outline-color var(--anim-duration-medium) var(--anim-ease-cubic);
}

.itemImage {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  border-radius: 50%;
  object-fit: cover;
  height: 100%;
  width: 100%;
}

.itemBadge {
  position: absolute;
  top: 0;
  right: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  width: var(--badge-sml-size);
  height: var(--badge-sml-size);
  border-radius: 50%;
  background-color: rgba(var(--c-lGrey-rgb), 0.8);
  transform: translate(25%, -25%);

  @media only screen and (min-width: 768px) {
    width: var(--badge-lrg-size);
    height: var(--badge-lrg-size);
  }
}

.itemName {
  margin-bottom: 0;
  color: var(--c-lGrey);
  text-align: center;
  transition: color var(--anim-duration-medium) var(--anim-ease-cubic);
}
